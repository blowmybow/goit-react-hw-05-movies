{"version":3,"file":"static/js/470.200616bc.chunk.js","mappings":"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","sources":["components/ButtonBack/ButtonBack.styled.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.jsx","utils/Api/Api.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const ButtonBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  padding: 14px;\n  height: 40px;\n  width: 140px;\n  text-decoration: none;\n  font-size: 24px;\n  text-align: center;\n  background: transparent;\n  color: #f69d3c;\n  border-radius: 8px;\n\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus-visible {\n    background-color: #f69d3c;\n    color: #ebf8e1;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding-top: 40px;\n  padding-bottom: 40px;\n  flex-grow: 1;\n`;\n\nexport const Container = styled.div`\n  max-width: 320px;\n  margin: 0 auto;\n  padding: 0 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const MovieContainerInfo = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    width: 270px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 320px;\n  }\n`;\n\nexport const Navigation = styled.nav`\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const MovieInfoTitle = styled.h1`\n  margin-bottom: 15px;\n  font-width: 700;\n  font-size: 32px;\n`;\nexport const OverviewTitle = styled.h2`\n  margin-bottom: 15px;\n  font-width: 600;\n  font-size: 28px;\n`;\nexport const OverviewText = styled.p`\n  margin-bottom: 15px;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n`;\nexport const GenresTitle = styled.h2`\n  margin-bottom: 15px;\n  font-width: 600;\n  font-size: 28px;\n`;\nexport const GenresText = styled.p`\n  margin-bottom: 15px;\n  font-size: 18px;\n  line-height: calc(22 / 18);\n`;\nexport const Rate = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 60px;\n  height: 40px;\n  background-color: #3f87a6;\n  color: #f69d3c;\n  font-size: 20px;\n  border-radius: 7px;\n`;\n","import PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { IoIosArrowRoundBack } from 'react-icons/io';\nimport Loader from '../Loader/Loader';\nimport { ButtonBack } from '../ButtonBack/ButtonBack.styled';\nimport {\n  Main,\n  Container,\n  MovieContainerInfo,\n  Image,\n  Navigation,\n  MovieInfoWrapper,\n  MovieInfoTitle,\n  OverviewTitle,\n  OverviewText,\n  GenresTitle,\n  GenresText,\n  Rate,\n} from './Movie.styled';\n\nconst Movie = ({\n  movie: { title, posterPath, overview, genres, vote, year },\n}) => {\n  const { state, pathname } = useLocation();\n\n  return (\n    <Main>\n      <Container>\n        <ButtonBack to={state?.from ?? '/'}>\n          <IoIosArrowRoundBack />\n          Go back\n        </ButtonBack>\n        <MovieContainerInfo>\n          <Image src={posterPath} alt={title} />\n          <div>\n            <MovieInfoWrapper>\n              <MovieInfoTitle>\n                {title} ({year ? year : 'xxxx'})\n              </MovieInfoTitle>\n              {vote !== 0 && <Rate>{vote}</Rate>}\n            </MovieInfoWrapper>\n            <OverviewTitle>Overview</OverviewTitle>\n            {overview ? (\n              <OverviewText>{overview}</OverviewText>\n            ) : (\n              'Information is not available'\n            )}\n            <GenresTitle>Genres</GenresTitle>\n            {genres ? (\n              <GenresText>{genres}</GenresText>\n            ) : (\n              'Information is not available'\n            )}\n          </div>\n        </MovieContainerInfo>\n        <Navigation>\n          <ButtonBack\n            to={pathname.includes('cast') ? '' : 'cast'}\n            state={{ from: state?.from ?? '/' }}\n          >\n            {pathname.includes('cast') ? 'Hide Cast' : 'Show Cast'}\n          </ButtonBack>\n          <ButtonBack\n            to={pathname.includes('reviews') ? '' : 'reviews'}\n            state={{ from: state?.from ?? '/' }}\n          >\n            {pathname.includes('reviews') ? 'Hide Reviews' : 'Show Reviews'}\n          </ButtonBack>\n        </Navigation>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Main>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.string.isRequired,\n    vote: PropTypes.number.isRequired,\n    year: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default Movie;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieDetails } from '../../utils/Api/Api';\n\nimport Movie from '../../components/Movie/Movie';\nimport Loader from '../../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const controller = new AbortController();\n\n    async function addMovieDetails() {\n      setStatus('pending');\n      try {\n        const movie = await getMovieDetails(movieId, controller);\n        setMovieDetails(movie);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    }\n    addMovieDetails();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error === 'canceled') {\n      return;\n    }\n    if (error) {\n      toast.error(error);\n      setError('');\n    }\n  }, [error]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <Movie movie={movieDetails} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport defaultImage from '../../images/no-image.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f5d9437320e908c9e483d2406c4ae5b6';\n\nfunction getImagePosterPath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport async function getTrendingMovies(page, controller) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, posterPath: getImagePosterPath(poster_path) };\n  });\n  return { movies, totalPages: response.data.total_pages };\n}\n\nexport async function getMovieDetails(movieId, controller) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    response.data;\n  return {\n    title,\n    posterPath: getImagePosterPath(poster_path),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    vote: vote_average.toFixed(1),\n    year: release_date.slice(0, 4),\n  };\n}\nexport async function getMovieCast(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const actors = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profilePath: getImagePosterPath(profile_path),\n        character,\n      };\n    }\n  );\n\n  return actors;\n}\nexport async function getMovieReviews(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const reviews = response.data.results.map(({ id, author, content }) => {\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n}\nexport async function getMovieSearchQuery(query, page = 1, controller) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    { signal: controller.signal }\n  );\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return {\n    movies,\n    totalPages: response.data.total_pages,\n    totalResults: response.data.total_results,\n  };\n}\n"],"names":["ButtonBack","styled","Link","Main","Container","MovieContainerInfo","Image","Navigation","MovieInfoWrapper","MovieInfoTitle","OverviewTitle","OverviewText","GenresTitle","GenresText","Rate","movie","title","posterPath","overview","genres","vote","year","useLocation","state","pathname","to","from","src","alt","includes","Suspense","fallback","Loader","movieId","useParams","useState","movieDetails","setMovieDetails","status","setStatus","error","setError","useEffect","controller","AbortController","addMovieDetails","abort","getMovieDetails","message","toast","axios","API_KEY","getImagePosterPath","path","defaultImage","getTrendingMovies","page","signal","response","movies","data","results","map","id","poster_path","totalPages","total_pages","vote_average","release_date","genre","name","join","toFixed","slice","getMovieCast","actors","cast","profile_path","character","profilePath","getMovieReviews","reviews","author","content","getMovieSearchQuery","query","totalResults","total_results"],"sourceRoot":""}