{"version":3,"file":"static/js/644.03bb11bc.chunk.js","mappings":"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","sources":["components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchMovies/SearchMovies.styled.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  height: auto;\n  width: 280px;\n  text-align: center;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.37);\n  border: 1px solid rgba(50, 94, 116, 0);\n  transform: scale(1);\n  transition: transform 250ms linear, border 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transition: all 0.25s;\n    scale: 1.03;\n  }\n`;\n\nexport const GalleryImage = styled.img``;\n\nexport const MovieTitle = styled.p`\n  margin: 0;\n  padding: 10px;\n  color: #ebf8e1;\n  font-size: 20px;\n  line-height: calc(28 / 20);\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  GalleryImage,\n  MovieTitle,\n} from './MoviesGalleryItem.styled';\n\nconst MoviesGalleryItem = ({ movie: { id, title, posterPath } }) => {\n  const location = useLocation();\n\n  return (\n    <GalleryItem>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImage src={posterPath} alt={title} />\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const MoviesGalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 30px;\n  padding: 0;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesGalleryItem from '../MoviesGalleryItem/MoviesGalleryItem';\nimport { MoviesGalleryList } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies }) => {\n  return (\n    <MoviesGalleryList>\n      {movies.map(movie => (\n        <MoviesGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MoviesGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      posterPath: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n      vote: PropTypes.number.isRequired,\n      year: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPagination = styled(ReactPaginate)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 12px;\n  list-style-type: none;\n  padding: 0;\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 42px;\n    width: 42px;\n    border-radius: 8px;\n    border: #f69d3c 3px solid;\n    text-decoration: none;\n    background-color: rgba(0, 0, 0, 0.37);\n    font-size: 16px;\n    color: #f69d3c;\n    cursor: pointer;\n  }\n  li.active a {\n    background-color: #ebf8e1;\n    border-color: transparent;\n    color: #3f87a6;\n  }\n  li.disabled a {\n    color: #f69d3c;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledPagination } from './Pagination.styled';\n\nimport { TfiAngleLeft } from 'react-icons/tfi';\nimport { TfiAngleRight } from 'react-icons/tfi';\n\nconst Pagination = ({ page, totalPages, changePage }) => {\n  const handlePageClick = e => {\n    changePage(e.selected + 1);\n  };\n  return (\n    <StyledPagination\n      previousLabel={<TfiAngleLeft />}\n      nextLabel={<TfiAngleRight />}\n      breakLabel=\"...\"\n      pageCount={totalPages}\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={2}\n      onPageChange={handlePageClick}\n      activeClassName=\"active\"\n      hrefBuilder={(page, pageCount) =>\n        page >= 1 && page <= pageCount ? `/page/${page}` : '#'\n      }\n      forcePage={page - 1}\n    />\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  totalPages: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import styled from '@emotion/styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding: 10px;\n  border-radius: 8px;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 50px;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  border-radius: 10px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  width: 60px;\n  height: 50px;\n  margin-left: 10px;\n  background: transparent;\n  color: #f69d3c;\n  border-radius: 10px;\n  cursor: pointer;\n  border: 0;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover,\n  &:focus-visible {\n    background-color: #f69d3c;\n    color: #ebf8e1;\n  }\n`;\n\nexport const SearchIcon = styled(BsSearch)`\n  width: 30px;\n  height: 30px;\n  fill: #f69d3c;\n  transition: fill 250ms linear;\n  :hover,\n  :focus-visible {\n    fill: #ebf8e1;\n  }\n`;\n","import { useFormik } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Form, Input, SearchButton, SearchIcon } from './SearchMovies.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const formik = useFormik({\n    initialValues: {\n      value: '',\n    },\n    onSubmit: values => {\n      onSubmit(values.value);\n      formik.resetForm();\n    },\n  });\n\n  const { handleSubmit, handleChange, values } = formik;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"value\"\n        onChange={handleChange}\n        value={values.value}\n        placeholder=\"Search movies\"\n      />\n      <SearchButton type=\"submit\">\n        <SearchIcon />\n      </SearchButton>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchMovies;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 320px;\n  min-height: 70vh;\n  margin: 0 auto;\n  padding: 0 20px;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Main = styled.main`\n  flex-grow: 1;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMovieSearchQuery } from '../../utils/Api/Api';\n\nimport SearchMovies from '../../components/SearchMovies/SearchMovies';\nimport MoviesGallery from '../../components/MoviesGallery/MoviesGallery';\nimport Pagination from '../../components/Pagination/Pagination';\nimport Loader from '../../components/Loader/Loader';\nimport { Container, Main } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query'));\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(searchParams.get('page'));\n  const [totalPages, setTotalPages] = useState(0);\n  const [notification, setNotification] = useState({ type: '', message: '' });\n\n  useEffect(() => {\n    if (!query) return;\n\n    const controller = new AbortController();\n\n    async function addMoviesSearchQuery() {\n      setStatus('pending');\n      try {\n        const { movies, totalPages, totalResults } = await getMovieSearchQuery(\n          query,\n          page,\n          controller\n        );\n\n        if (totalResults === 0) {\n          setNotification({\n            type: 'error',\n            message:\n              'Sorry, there are no movies matching your search query. Please try again.',\n          });\n          setSearchedMovies([]);\n          setQuery(null);\n        }\n\n        setSearchedMovies(movies);\n        setTotalPages(totalPages);\n        setStatus('resolved');\n      } catch (error) {\n        setNotification({\n          type: 'error',\n          message: error.message,\n        });\n        setStatus('rejected');\n      }\n    }\n    addMoviesSearchQuery();\n\n    return () => {\n      controller.abort();\n    };\n  }, [page, query]);\n\n  useEffect(() => {\n    if (notification) {\n      function handleNotification() {\n        const notificationType = notification.type;\n        const notificationMessage = notification.message;\n\n        if (notification.message === 'canceled') {\n          return;\n        }\n        if (notificationType === 'info') {\n          toast.info(notificationMessage);\n          setNotification({ type: '', message: '' });\n        }\n        if (notificationType === 'error') {\n          toast.error(notificationMessage);\n          setNotification({ type: '', message: '' });\n        }\n      }\n      handleNotification();\n    }\n  }, [notification]);\n\n  const changePage = currentPage => {\n    setSearchParams({ query: query, page: currentPage });\n    setPage(currentPage);\n  };\n\n  const handleSearch = value => {\n    if (!value) {\n      setNotification({\n        type: 'info',\n        message: 'Please enter your search query!',\n      });\n      return;\n    }\n\n    if (value === query) {\n      setNotification({\n        type: 'info',\n        message:\n          'You are seeing the images by this query. Please, change your query.',\n      });\n      return;\n    }\n\n    setQuery(value);\n    setPage(1);\n    setSearchParams({ query: value, page: 1 });\n    setNotification({\n      type: '',\n      message: '',\n    });\n    setStatus('idle');\n  };\n\n  return (\n    <Main>\n      <Container>\n        <SearchMovies onSubmit={handleSearch} />\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && <MoviesGallery movies={searchedMovies} />}\n        {status === 'resolved' && totalPages > 1 && (\n          <Pagination\n            page={page}\n            totalPages={totalPages}\n            changePage={changePage}\n            query={query}\n          />\n        )}\n      </Container>\n    </Main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nimport defaultImage from '../../images/no-image.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f5d9437320e908c9e483d2406c4ae5b6';\n\nfunction getImagePosterPath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport async function getTrendingMovies(page, controller) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, posterPath: getImagePosterPath(poster_path) };\n  });\n  return { movies, totalPages: response.data.total_pages };\n}\n\nexport async function getMovieDetails(movieId, controller) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    response.data;\n  return {\n    title,\n    posterPath: getImagePosterPath(poster_path),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    vote: vote_average.toFixed(1),\n    year: release_date.slice(0, 4),\n  };\n}\nexport async function getMovieCast(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const actors = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profilePath: getImagePosterPath(profile_path),\n        character,\n      };\n    }\n  );\n\n  return actors;\n}\nexport async function getMovieReviews(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const reviews = response.data.results.map(({ id, author, content }) => {\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n}\nexport async function getMovieSearchQuery(query, page = 1, controller) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    { signal: controller.signal }\n  );\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return {\n    movies,\n    totalPages: response.data.total_pages,\n    totalResults: response.data.total_results,\n  };\n}\n"],"names":["GalleryItem","styled","GalleryImage","MovieTitle","movie","id","title","posterPath","location","useLocation","to","state","from","src","alt","MoviesGalleryList","movies","map","StyledPagination","ReactPaginate","page","totalPages","changePage","previousLabel","nextLabel","breakLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","e","selected","activeClassName","hrefBuilder","forcePage","Form","Input","SearchButton","SearchIcon","BsSearch","onSubmit","formik","useFormik","initialValues","value","values","resetForm","handleSubmit","handleChange","type","name","onChange","placeholder","Container","Main","useSearchParams","searchParams","setSearchParams","useState","get","query","setQuery","searchedMovies","setSearchedMovies","status","setStatus","setPage","setTotalPages","message","notification","setNotification","useEffect","controller","AbortController","addMoviesSearchQuery","abort","getMovieSearchQuery","totalResults","notificationType","notificationMessage","toast","handleNotification","Loader","MoviesGallery","Pagination","currentPage","axios","API_KEY","getImagePosterPath","path","defaultImage","getTrendingMovies","signal","response","data","results","poster_path","total_pages","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","join","vote","toFixed","year","slice","getMovieCast","actors","cast","profile_path","character","profilePath","getMovieReviews","reviews","author","content","total_results"],"sourceRoot":""}