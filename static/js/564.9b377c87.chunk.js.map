{"version":3,"file":"static/js/564.9b377c87.chunk.js","mappings":"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","sources":["components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","utils/Api/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  height: auto;\n  width: 280px;\n  text-align: center;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.37);\n  border: 1px solid rgba(50, 94, 116, 0);\n  transform: scale(1);\n  transition: transform 250ms linear, border 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transition: all 0.25s;\n    scale: 1.03;\n  }\n`;\n\nexport const GalleryImage = styled.img``;\n\nexport const MovieTitle = styled.p`\n  margin: 0;\n  padding: 10px;\n  color: #ebf8e1;\n  font-size: 20px;\n  line-height: calc(28 / 20);\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  GalleryItem,\n  GalleryImage,\n  MovieTitle,\n} from './MoviesGalleryItem.styled';\n\nconst MoviesGalleryItem = ({ movie: { id, title, posterPath } }) => {\n  const location = useLocation();\n\n  return (\n    <GalleryItem>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <GalleryImage src={posterPath} alt={title} />\n        <MovieTitle>{title}</MovieTitle>\n      </Link>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    posterPath: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesGalleryItem;\n","import styled from '@emotion/styled';\n\nexport const MoviesGalleryList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 30px;\n  padding: 0;\n`;\n","import PropTypes from 'prop-types';\nimport MoviesGalleryItem from '../MoviesGalleryItem/MoviesGalleryItem';\nimport { MoviesGalleryList } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies }) => {\n  return (\n    <MoviesGalleryList>\n      {movies.map(movie => (\n        <MoviesGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MoviesGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      posterPath: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n      vote: PropTypes.number.isRequired,\n      year: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesGallery;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPagination = styled(ReactPaginate)`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 12px;\n  list-style-type: none;\n  padding: 0;\n\n  li a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 42px;\n    width: 42px;\n    border-radius: 8px;\n    border: #f69d3c 3px solid;\n    text-decoration: none;\n    background-color: rgba(0, 0, 0, 0.37);\n    font-size: 16px;\n    color: #f69d3c;\n    cursor: pointer;\n  }\n  li.active a {\n    background-color: #ebf8e1;\n    border-color: transparent;\n    color: #3f87a6;\n  }\n  li.disabled a {\n    color: #f69d3c;\n  }\n  li.disable,\n  li.disabled a {\n    cursor: default;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledPagination } from './Pagination.styled';\n\nimport { TfiAngleLeft } from 'react-icons/tfi';\nimport { TfiAngleRight } from 'react-icons/tfi';\n\nconst Pagination = ({ page, totalPages, changePage }) => {\n  const handlePageClick = e => {\n    changePage(e.selected + 1);\n  };\n  return (\n    <StyledPagination\n      previousLabel={<TfiAngleLeft />}\n      nextLabel={<TfiAngleRight />}\n      breakLabel=\"...\"\n      pageCount={totalPages}\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={2}\n      onPageChange={handlePageClick}\n      activeClassName=\"active\"\n      hrefBuilder={(page, pageCount) =>\n        page >= 1 && page <= pageCount ? `/page/${page}` : '#'\n      }\n      forcePage={page - 1}\n    />\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  totalPages: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  color: #f69d3c;\n  margin-top: 30px;\n  margin-left: 45px;\n`;\n\nexport const Container = styled.div`\n  max-width: 320px;\n  margin: 0 auto;\n  padding: 0 18px;\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getTrendingMovies } from '../../utils/Api/Api';\n\nimport MoviesGallery from '../../components/MoviesGallery/MoviesGallery';\nimport Pagination from '../../components/Pagination/Pagination';\nimport Loader from '../../components/Loader/Loader';\n\nimport { Title, Container } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [error, setError] = useState('');\n\n  const navigate = useNavigate();\n  const params = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function addTrendingMovies() {\n      setStatus('pending');\n      try {\n        const trendingMovies = await getTrendingMovies(page, controller);\n        setMovies(trendingMovies.movies);\n        setTotalPages(trendingMovies.totalPages);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error.message);\n        setStatus('rejected');\n      }\n    }\n    addTrendingMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  useEffect(() => {\n    if (params.page) {\n      setPage(params.page);\n      return;\n    }\n    setPage(1);\n  }, [params.page]);\n\n  useEffect(() => {\n    if (error === 'canceled') {\n      return;\n    }\n    if (error) {\n      toast.error(error);\n      setError('');\n    }\n  }, [error]);\n\n  const changePage = currentPage => {\n    navigate(`/${currentPage}`);\n    setPage(currentPage);\n  };\n\n  return (\n    <>\n      <Container>\n        {status === 'pending' && <Loader />}\n        {status === 'resolved' && <Title>Trending today</Title>}\n        {status === 'resolved' && <MoviesGallery movies={movies} />}\n        {status === 'resolved' && (\n          <Pagination\n            page={page}\n            totalPages={totalPages}\n            changePage={changePage}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nimport defaultImage from '../../images/no-image.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f5d9437320e908c9e483d2406c4ae5b6';\n\nfunction getImagePosterPath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}\n\nexport async function getTrendingMovies(page, controller) {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return { id, title, posterPath: getImagePosterPath(poster_path) };\n  });\n  return { movies, totalPages: response.data.total_pages };\n}\n\nexport async function getMovieDetails(movieId, controller) {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    response.data;\n  return {\n    title,\n    posterPath: getImagePosterPath(poster_path),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    vote: vote_average.toFixed(1),\n    year: release_date.slice(0, 4),\n  };\n}\nexport async function getMovieCast(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const actors = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profilePath: getImagePosterPath(profile_path),\n        character,\n      };\n    }\n  );\n\n  return actors;\n}\nexport async function getMovieReviews(movieId, controller) {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n  const reviews = response.data.results.map(({ id, author, content }) => {\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n}\nexport async function getMovieSearchQuery(query, page = 1, controller) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    { signal: controller.signal }\n  );\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return {\n    movies,\n    totalPages: response.data.total_pages,\n    totalResults: response.data.total_results,\n  };\n}\n"],"names":["GalleryItem","styled","GalleryImage","MovieTitle","movie","id","title","posterPath","location","useLocation","to","state","from","src","alt","MoviesGalleryList","movies","map","StyledPagination","ReactPaginate","page","totalPages","changePage","previousLabel","nextLabel","breakLabel","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","e","selected","activeClassName","hrefBuilder","forcePage","Title","Container","useState","setMovies","status","setStatus","setPage","setTotalPages","error","setError","navigate","useNavigate","params","useParams","useEffect","controller","AbortController","getTrendingMovies","trendingMovies","message","addTrendingMovies","abort","toast","Loader","MoviesGallery","Pagination","currentPage","axios","API_KEY","getImagePosterPath","path","defaultImage","signal","response","data","results","poster_path","total_pages","getMovieDetails","movieId","overview","genres","vote_average","release_date","genre","name","join","vote","toFixed","year","slice","getMovieCast","actors","cast","profile_path","character","profilePath","getMovieReviews","reviews","author","content","getMovieSearchQuery","query","totalResults","total_results"],"sourceRoot":""}